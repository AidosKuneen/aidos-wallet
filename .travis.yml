matrix:
  include:
    - os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: "12"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      services: docker
      language: generic

cache:
  directories:
    - node_modules

env:
  - NODE_VERSION="12.8.3"

addons:
  apt:
    packages:
      - graphicsmagick
      - icnsutils
      - gcc-multilib
      - g++-multilib
      - bsdtar
      - rpm
      - xz-utils

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    echo "in osx";
    git clone https://github.com/creationix/nvm.git /tmp/.nvm;
    source /tmp/.nvm/nvm.sh;
    fi
  - nvm install $NODE_VERSION
  - nvm use --delete-prefix $NODE_VERSION
  - node --version
    - npm install electron@10.1.1
  - npm install electron-builder@22.8.0

install:
  - yarn
  - pushd ccurl
  - rm mac/libccurl.dylib
  - rm lin64/libccurl.so
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    echo "in linux";
    gcc -shared -o libccurl.so libccurl.cpp -O3 -lpthread -fPIC -std=c++11;
    mkdir -p lin64;
    cp libccurl.so lin64/;
    rm libccurl.so;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    echo "in osx";
    gcc -dynamiclib -o libccurl.dylib libccurl.cpp -O3 -lpthread -std=c++11;
    mkdir -p mac;
    cp libccurl.dylib mac/;
    rm libccurl.dylib;
    fi
  - popd
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then  yarn compile:lin; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then  yarn compile:mac; fi
  - find out

script:
  - echo "nothing to do"
